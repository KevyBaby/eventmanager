{"version":3,"sources":["context.js","components/Events/Event.js","components/Events/Events.js","components/layout/TextinputGroup.js","components/Events/AddEvent.js","components/Events/EditEvent.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","events","filter","event","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Event","showEventInfo","onDeleteClick","a","delete","name","location","date","className","onClick","style","cursor","float","color","bind","Link","to","class","marginRight","Events","Fragment","key","TextinputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddEvent","errors","onSubmit","e","preventDefault","newEvent","post","history","push","target","EditEvent","updEvent","match","params","put","Header","branding","href","Test","title","body","fetch","then","response","json","App","Switch","Route","exact","path","component","About","NotFound","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.69663736.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_EVENT':\n      return {\n        ...state, //spread operator for immutable state\n        events: state.events.filter((event) => event.id !== action.payload),\n      };\n    case 'ADD_EVENT':\n      return {\n        ...state,\n        events: [action.payload, ...state.events],\n      };\n    case 'UPDATE_EVENT':\n      return {\n        ...state,\n        events: state.events.map((event) =>\n          event.id === action.payload.id ? (event = action.payload) : event\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    events: [],\n    dispatch: (action) => {\n      this.setState((state) => reducer(state, action));\n    },\n  };\n\n  async componentDidMount() {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n    this.setState({ events: res.data });\n  }\n  //Provider passes value which is the entire state\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n//Consumer used to return the state\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\nclass Event extends Component {\n  //Events class\n  state = {\n    showEventInfo: false, //Show or hide event information\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      const res = await axios.delete(\n        `https://jsonplaceholder.typicode.com/users/${id}`\n      );\n      dispatch({ type: 'DELETE_EVENT', payload: id });\n    } catch (e) {\n      dispatch({ type: 'DELETE_EVENT', payload: id });\n    }\n  };\n  render() {\n    const { id, name, location, date } = this.props.event; //namespace\n    const { showEventInfo } = this.state;\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3 \">\n              <h4>\n                {name}{' '}\n                <i\n                  onClick={() =>\n                    this.setState({ showEventInfo: !this.state.showEventInfo })\n                  }\n                  className=\"fa fa-sort-down\"\n                  style={{ cursor: 'pointer' }}\n                ></i>\n                <i\n                  className=\"fa fa-times\"\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                ></i>\n                <Link to={`event/edit/${id}`}>\n                  <i\n                    class=\"fa fa-pencil\"\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'black',\n                      marginRight: '1rem',\n                    }}\n                  ></i>\n                </Link>\n              </h4>\n              {showEventInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Venue: {location}</li>\n                  <li className=\"list-group-item\"> Date: {date}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n      //passed name,date and location as props(properties)\n    );\n  }\n}\n//Property type checking\nEvent.propTypes = {\n  event: PropTypes.object.isRequired,\n};\nexport default Event;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport Event from './Event';\n\nclass Events extends Component {\n  render() {\n    return (\n      <Consumer>\n        {(value) => {\n          const { events } = value; //state\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-primary\">Event</span>\n                <span className=\"text-dark\">List</span>\n              </h1>\n              {events.map((event) => (\n                <Event key={event.id} event={event} /> //maps through events, each prop has key using id.\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Events;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextinputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error,\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error,\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextinputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n};\n\nTextinputGroup.defaultProps = {\n  type: 'text',\n};\n\nexport default TextinputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextinputGroup';\nimport axios from 'axios';\n//Controlled component\nclass AddEvent extends Component {\n  state = {\n    name: '',\n    location: '',\n    date: '',\n    errors: {},\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, location, date } = this.state;\n\n    //Check for errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Event name is required' } });\n      return;\n    }\n\n    if (location === '') {\n      this.setState({ errors: { location: 'Event address is required' } });\n      return;\n    }\n\n    if (date === '') {\n      this.setState({ errors: { date: 'Event date is required' } });\n      return;\n    }\n\n    const newEvent = {\n      name,\n      location,\n      date,\n    };\n\n    const res = await axios.post(\n      'https://jsonplaceholder.typicode.com/users',\n      newEvent\n    );\n    dispatch({ type: 'ADD_EVENT', payload: res.data });\n\n    this.setState({\n      name: '',\n      location: '',\n      date: '',\n      errors: {},\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, location, date, errors } = this.state;\n\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header text-dark bg-primary\">Add Event</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Event Name\"\n                    name=\"name\"\n                    placeholder=\"Enter event name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Event Location\"\n                    name=\"location\"\n                    placeholder=\"Enter address\"\n                    value={location}\n                    onChange={this.onChange}\n                    error={errors.location}\n                  />\n                  <TextInputGroup\n                    label=\"Event Date\"\n                    name=\"date\"\n                    type=\"date\"\n                    placeholder=\"Enter event date\"\n                    value={date}\n                    onChange={this.onChange}\n                    error={errors.date}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Event\"\n                    className=\"btn btn-secondary btn-block text-dark\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default AddEvent;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextinputGroup';\nimport axios from 'axios';\n//Controlled component\nclass EditEvent extends Component {\n  state = {\n    name: '',\n    location: '',\n    date: '',\n    errors: {},\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const event = res.data;\n\n    this.setState({\n      name: event.name,\n      location: event.location,\n      date: event.date,\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, location, date } = this.state;\n\n    //Check for errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Event name is required' } });\n      return;\n    }\n\n    if (location === '') {\n      this.setState({ errors: { location: 'Event address is required' } });\n      return;\n    }\n\n    if (date === '') {\n      this.setState({ errors: { date: 'Event date is required' } });\n      return;\n    }\n\n    const updEvent = {\n      name,\n      location,\n      date,\n    };\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updEvent\n    );\n\n    dispatch({ type: 'UPDATE_EVENT', payload: res.data });\n\n    this.setState({\n      name: '',\n      location: '',\n      date: '',\n      errors: {},\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, location, date, errors } = this.state;\n\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header text-dark bg-primary\">Edit Event</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Event Name\"\n                    name=\"name\"\n                    placeholder=\"Enter event name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Event Location\"\n                    name=\"location\"\n                    placeholder=\"Enter address\"\n                    value={location}\n                    onChange={this.onChange}\n                    error={errors.location}\n                  />\n                  <TextInputGroup\n                    label=\"Event Date\"\n                    name=\"date\"\n                    type=\"date\"\n                    placeholder=\"Enter event date\"\n                    value={date}\n                    onChange={this.onChange}\n                    error={errors.date}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Event\"\n                    className=\"btn btn-secondary btn-block text-dark\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default EditEvent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-3 py--0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <span className=\"text-dark\">\n                  <i className=\"fa fa-home\"></i>Home\n                </span>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/event/add\" className=\"nav-link\">\n                <span className=\"text-dark\">\n                  <i className=\"fa fa-plus\"></i>Add\n                </span>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <span className=\"text-dark\">\n                  <i className=\"fa fa-question\"></i>About\n                </span>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App',\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired,\n};\n\n//Raw styling\n//We can create a style sheet for each component\n\nexport default Header;\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Event Manager</h1>\n      <p className=\"lead\">Simple app to manage events</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404 </span>Page Not Found\n      </h1>\n      <p className=\"lead\">You seem a bit lost</p>\n    </div>\n  );\n};\n","import React, { Component } from 'react';\nclass Test extends Component {\n  state = {\n    title: '',\n    body: '',\n  };\n  componentDidMount() {\n    fetch(\n      'https://raw.githubusercontent.com/KevyBaby/fakeEventsServer/master/db.json'\n    )\n      .then((response) => response.json())\n      .then((data) => this.setState({ title: data.title, body: data.body }));\n  }\n  //   componentWillMount() {\n  //     console.log('Component will mount');\n  //   }\n\n  //   componentDidUpdate() {\n  //     console.log('Component did update');\n  //   }\n\n  //   componentWillUpdate() {\n  //     console.log('Component will update');\n  //   }\n\n  //   componentWillReceiveProps(nextProps, nextState) {\n  //     console.log('Component will recieve props');\n  //   }\n\n  //   static getDerivedStateFromProps(nextProps, prevState) {\n  //     return null;\n  //   }\n\n  //   getSnapshotBeforeUpdate(prevProps, prevState) {\n  //     console.log('getSnapshotBeforeUpdate');\n  //   }\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Events from './components/Events/Events';\nimport { Provider } from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AddEvent from './components/Events/AddEvent';\nimport EditEvent from './components/Events/EditEvent';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\n\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Event Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Events} />\n                <Route exact path=\"/event/add\" component={AddEvent} />\n                <Route exact path=\"/event/edit/:id\" component={EditEvent} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}